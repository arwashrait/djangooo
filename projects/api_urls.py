# # ~/crowdfunding/projects/api_urls.py (Recommended location)

# from django.urls import path, include
# from rest_framework.routers import DefaultRouter
# from .api_views import ProjectViewSet

# router = DefaultRouter()
# # Register ProjectViewSet with an empty prefix for the root of the API path
# # The basename 'project' will be used to generate URL names like 'project-list', 'project-detail', etc.
# router.register(r'', ProjectViewSet, basename='project')

# # The API URLs are now determined automatically by the router.
# urlpatterns = [
#     # This line includes all URLs generated by the router
#     # For example:
#     # /api/projects/ (list)
#     # /api/projects/{id}/ (detail)
#     # /api/projects/{id}/donate/ (custom action)
#     # etc.
#     path('', include(router.urls)),
# ]
# ~/crowdfunding/projects/api_urls.py (Recommended location)

from django.urls import path
# Import your ProjectViewSet and other necessary API views
from .api_views import ProjectViewSet

# Define app_name for namespacing (optional but good practice)
app_name = 'projects_api' # Using a different app_name to avoid conflict with web urls

urlpatterns = [
    # List and Create Projects (GET, POST)
    path('', ProjectViewSet.as_view({'get': 'list', 'post': 'create'}), name='project-list-create'),
    path('homepage_data/', ProjectViewSet.as_view({'get': 'homepage_data'}), name='project-homepage-data'),


    # Retrieve, Update, Delete Projects (GET, PUT, PATCH, DELETE)
    path('<int:pk>/', ProjectViewSet.as_view({
        'get': 'retrieve',
        'put': 'update',
        'patch': 'partial_update',
        'delete': 'destroy'
    }), name='project-detail'),

    # Custom Actions for a specific project (detail=True)
    path('<int:pk>/donate/', ProjectViewSet.as_view({'post': 'donate'}), name='project-donate'),
    path('<int:pk>/rate/', ProjectViewSet.as_view({'post': 'rate'}), name='project-rate'),
    path('<int:pk>/cancel/', ProjectViewSet.as_view({'post': 'cancel'}), name='project-cancel'),
    path('<int:pk>/comment/', ProjectViewSet.as_view({'post': 'comment'}), name='project-comment'),
    path('<int:pk>/report_project/', ProjectViewSet.as_view({'post': 'report_project'}), name='project-report-project'),
    path('<int:pk>/similar/', ProjectViewSet.as_view({'get': 'similar'}), name='project-similar'),


    # Custom Action for reporting a specific comment on a project (requires project_id in URL, comment_id in body)
    # The URL matches the ProjectViewSet, but the action targets a comment within that project context.
    # Note: If report_comment were a separate ViewSet for comments, its URL structure might be different.
    # This design keeps all project-related actions under the ProjectViewSet's URL hierarchy.
    path('<int:pk>/report_comment/', ProjectViewSet.as_view({'post': 'report_comment'}), name='project-report-comment'),

]
